Java SE 7+ /Android 4+ UDP client and server, MIT (c) 2025 miktim@mail.ru  
  
The UDP protocol does not guarantee datagram delivery, ordering, or duplicate protection. 
The maximum safe UDP payload size is ~508 bytes.  
 
Based on the Java MulticastSocket class  
  
Advantage of this class:  
  - supported by old and current versions of Java and Android.  
Disadvantage:  
  - does not always work and not on all devices;  
  - does not support anycast and source-specific multicast.  

Note: don't forget to open the required UDP port in your firewall.  
    
  package org.miktim.udpsocket  
    
    Class UdpSocket  
  
      Constants:  
        String VERSION = "4.0.0"  
  
      Constructors:  
        Constructor creates reuse enabled unbinded sockets.
        Sets the network interface for outgoing multicast datagrams sent on this socket.
        For multicast remote address joins address group on interface
  
        UdpSocket(InetSocketAddress remote, NetworkInterface netIf) throws IOException; 
        UdpSocket(InetAddress remoteAddr, int remotePort, String netIfName) throws IOException;
  
      interface Handler {
        void onStart(UdpSocket us);
        void onError(UdpSocket us, Exception e);
        void onPacket(UdpSocket us, DatagramPacket dp);
        void onClose(UdpSocket us); // called before closing datagram socket
      }
  
      Methods:  
        static void isAvailable(int port);
  
        InetSocketAddress getRemote();
        UdpSocket bind() throws IOException;
          - binds unbounded socket to 0.0.0.0/remotePort
        void send(DatagramPacket dp) throws IOException;
          - binds unbounded socket to 0.0.0.0/remotePort
          - if packet remote address unspecified, fills it with remote socket
        void send(byte[] buf) throws IOException;
        void receive(DatagramPacket dp) throws IOException;
          - binds unbounded socket to 0.0.0.0/remotePort
            
        UdpSocket setPayloadSize(int size);
          - sets max size of received datagram
        int getPayloadSize();
          - default: 1500 bytes
        boolean isReceiving();
          - returns receiving state
        void receive(UdpSocket.Handler handler);
          - binds unbounded socket to 0.0.0.0/remotePort
          - starts receiving datagram
        void receive(DatagramPacket dp) throws IOException;
          - binds unbounded socket to 0.0.0.0/remotePort
          - waits datagram
  
        void close();
          - [stops receiving,] close socket
  
  See also:  
    inherited DatagramSocket and MulticastSocket methods  
      https://docs.oracle.com/javase/7/docs/api/java/net/DatagramSocket.html  
      https://docs.oracle.com/javase/7/docs/api/java/net/MulticastSocket.html  
  
      https://docs.oracle.com/javase/7/docs/api/java/net/DatagramPacket.html
  